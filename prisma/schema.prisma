// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int     @id @default(autoincrement())
  email         String  @unique
  username      String  @unique
  password_hash String
  fullName      String?
  role          String? @default("author") // e.g., author, reviewer, admin

  submittedManuscripts Manuscript[] @relation("SubmittedBy")

  @@map("users")
}

model JournalCategory {
  id                   String       @id @default(cuid())
  name                 String       @unique
  description          Json
  slug                 String       @unique
  iconName             String
  imagePath            String       @db.VarChar(1024)
  imageHint            String       @db.VarChar(255)
  order                Int          @default(0)
  abbreviation         String?
  language             String?
  issn                 String?
  doiBase              String?
  startYear            Int?
  displayIssn          String?
  copyrightYear        Int?
  scope                Json?
  manuscripts          Manuscript[]

  @@map("journal_categories")
}

model Manuscript {
  id                      String   @id @default(cuid())
  articleTitle            String   @db.Text
  abstract                String   @db.Text
  keywords                String?
  journalCategoryId       String
  journalCategory         JournalCategory @relation(fields: [journalCategoryId], references: [id])
  isSpecialReview         Boolean  @default(false)
  
  // File details
  coverLetterFileName     String?
  manuscriptFileName      String
  supplementaryFilesName  String?

  authorAgreement         Boolean
  coAuthors               Json?
  
  status                  String
  submittedAt             DateTime @default(now())
  submittedById           Int
  submittedBy             User     @relation("SubmittedBy", fields: [submittedById], references: [id])

  views                   Int? @default(0)
  downloads               Int? @default(0)
  citations               Int? @default(0)

  @@index([submittedById])
  @@index([journalCategoryId])
  @@map("manuscripts")
}
