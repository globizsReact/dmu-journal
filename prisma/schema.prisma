
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  fullName      String?
  username      String   @unique
  email         String   @unique
  password_hash String
  role          String?  @default("author") // e.g., 'admin', 'author', 'reviewer', 'reviewer_inactive'
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  manuscripts   Manuscript[]
}

model Manuscript {
  id                      String    @id @default(cuid())
  articleTitle            String    @db.Text
  abstract                Json
  keywords                String?
  status                  String    @default("Submitted") // e.g., 'Submitted', 'In Review', 'Accepted', 'Published', 'Suspended', 'Rejected'
  isSpecialReview         Boolean   @default(false)
  
  // File Names
  coverLetterFileName     String?
  manuscriptFileName      String
  supplementaryFilesName  String?
  thumbnailImagePath      String?
  thumbnailImageHint      String?
  
  // Author & Co-Authors
  authorAgreement         Boolean   @default(false)
  coAuthors               Json?     // Storing as JSON array of objects
  
  // Relationships
  submittedById           Int
  submittedBy             User      @relation(fields: [submittedById], references: [id])
  journalCategoryId       String
  journalCategory         JournalCategory @relation(fields: [journalCategoryId], references: [id])
  
  // Timestamps
  submittedAt             DateTime  @default(now())
  updatedAt               DateTime  @updatedAt

  // Metrics
  views                   Int?      @default(0)
  downloads               Int?      @default(0)
  citations               Int?      @default(0)
}

model JournalCategory {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description Json
  iconName    String
  imagePath   String
  imageHint   String
  order       Int      @default(0)
  
  // Optional metadata fields
  abbreviation    String?
  language        String?
  issn            String?
  doiBase         String?
  startYear       Int?
  displayIssn     String?
  copyrightYear   Int?
  
  // Relationship
  manuscripts Manuscript[]
}

// Model for static site pages like 'About Us', 'Landing Page', etc.
model SitePage {
  id             String    @id @default(cuid())
  slug           String    @unique
  title          String
  content        Json
  coverImagePath String?
  coverImageHint String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

// Model for FAQ Categories
model FaqCategory {
  id      String    @id @default(cuid())
  title   String
  order   Int       @default(0)
  items   FaqItem[]
}

// Model for individual FAQ Items
model FaqItem {
  id          String      @id @default(cuid())
  question    String
  answer      Json
  order       Int         @default(0)
  categoryId  String
  category    FaqCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}
