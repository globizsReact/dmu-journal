// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  fullName      String?
  username      String   @unique
  email         String   @unique
  password_hash String
  role          String?  @default("author") // e.g., 'author', 'reviewer', 'admin', 'reviewer_inactive'
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  submittedManuscripts Manuscript[] @relation("SubmittedBy")
}

model JournalCategory {
  id        String    @id @default(cuid())
  name      String    @unique
  slug      String    @unique
  description Json
  iconName  String
  imagePath String
  imageHint String
  abbreviation String?
  language  String?
  issn      String?
  doiBase   String?
  startYear Int?
  displayIssn String?
  copyrightYear Int?
  order     Int       @default(0)
  manuscripts Manuscript[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  scope     Json?
}

model Manuscript {
  id                     String    @id @default(cuid())
  articleTitle           String    @db.VarChar(255)
  abstract               Json
  keywords               String?   @db.VarChar(255)
  status                 String    @default("Submitted") // e.g., Submitted, In Review, Accepted, Published, Suspended, Rejected
  submittedAt            DateTime  @default(now())
  publishedAt            DateTime?
  journalCategoryId      String
  isSpecialReview        Boolean   @default(false)
  authorAgreement        Boolean   @default(false)
  coAuthors              Json?
  submittedById          Int
  coverLetterFileName    String?
  manuscriptFileName     String
  supplementaryFilesName String?
  thumbnailImagePath     String?
  thumbnailImageHint     String?

  views                  Int?      @default(0)
  downloads              Int?      @default(0)
  citations              Int?      @default(0)
  
  journalCategory        JournalCategory @relation(fields: [journalCategoryId], references: [id])
  submittedBy            User      @relation("SubmittedBy", fields: [submittedById], references: [id])
}

model SitePage {
    id        String    @id @default(cuid())
    slug      String    @unique
    title     String
    content   Json
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model FaqCategory {
  id        String    @id @default(cuid())
  title     String    @unique
  order     Int       @default(0)
  items     FaqItem[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model FaqItem {
  id         String      @id @default(cuid())
  question   String
  answer     Json
  order      Int         @default(0)
  categoryId String
  category   FaqCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}
